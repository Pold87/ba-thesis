#+LATEX_CLASS: article
#+OPTIONS: author:nil toc:nil num:nil
#+LaTeX_CLASS_OPTIONS: [a4paper,10pt]
#+LaTeX_HEADER: \usepackage[margin=1in]{geometry}
#+LaTeX_HEADER: \usepackage[]{keystroke}
#+LaTeX_HEADER: \pagenumbering{gobble}
#+TITLE: Raw Data - Splisus and Store 
#+PROPERTY: colnames yes

* All
#+ATTR_LaTeX: :environment longtable
#+NAME: raw-domains
| VP | Tool | Domain  | Question | Seconds | Correct | First   |
|----+------+---------+----------+---------+---------+---------|
|  2 | Yes  | Splisus | Q1       |      38 |       1 | Splisus |
|  2 | Yes  | Splisus | Q2       |      30 |       1 | Splisus |
|  2 | Yes  | Splisus | Q3       |       7 |       1 | Splisus |
|  2 | Yes  | Splisus | Q4       |     140 |       0 | Splisus |
|  2 | Yes  | Splisus | Q5       |      53 |       1 | Splisus |
|  2 | No   | Store   | Q1       |      10 |       1 | Splisus |
|  2 | No   | Store   | Q2       |      24 |       1 | Splisus |
|  2 | No   | Store   | Q3       |      70 |       1 | Splisus |
|  2 | No   | Store   | Q4       |      64 |       1 | Splisus |
|  2 | No   | Store   | Q5       |      77 |       1 | Splisus |
|  3 | No   | Store   | Q1       |      60 |       1 | Store   |
|  3 | No   | Store   | Q2       |      37 |       1 | Store   |
|  3 | No   | Store   | Q3       |     163 |       0 | Store   |
|  3 | No   | Store   | Q4       |     127 |       1 | Store   |
|  3 | No   | Store   | Q5       |      77 |       1 | Store   |
|  3 | Yes  | Splisus | Q1       |      19 |       1 | Store   |
|  3 | Yes  | Splisus | Q2       |      18 |       1 | Store   |
|  3 | Yes  | Splisus | Q3       |      33 |       1 | Store   |
|  3 | Yes  | Splisus | Q4       |     142 |       0 | Store   |
|  3 | Yes  | Splisus | Q5       |      11 |       1 | Store   |
|  4 | Yes  | Store   | Q1       |      19 |       1 | Store   |
|  4 | Yes  | Store   | Q2       |      15 |       1 | Store   |
|  4 | Yes  | Store   | Q3       |      61 |       1 | Store   |
|  4 | Yes  | Store   | Q4       |     148 |       1 | Store   |
|  4 | Yes  | Store   | Q5       |      67 |       1 | Store   |
|  4 | No   | Splisus | Q1       |      35 |       1 | Store   |
|  4 | No   | Splisus | Q2       |     124 |       1 | Store   |
|  4 | No   | Splisus | Q3       |      28 |       1 | Store   |
|  4 | No   | Splisus | Q4       |      86 |       1 | Store   |
|  4 | No   | Splisus | Q5       |      56 |       1 | Store   |
|  5 | Yes  | Store   | Q1       |      33 |       1 | Splisus |
|  5 | Yes  | Store   | Q2       |      46 |       1 | Splisus |
|  5 | Yes  | Store   | Q3       |      37 |       0 | Splisus |
|  5 | Yes  | Store   | Q4       |      48 |       1 | Splisus |
|  5 | Yes  | Store   | Q5       |     179 |       1 | Splisus |
|  5 | No   | Splisus | Q1       |      50 |       1 | Splisus |
|  5 | No   | Splisus | Q2       |      22 |       1 | Splisus |
|  5 | No   | Splisus | Q3       |      36 |       1 | Splisus |
|  5 | No   | Splisus | Q4       |      34 |       1 | Splisus |
|  5 | No   | Splisus | Q5       |     173 |       1 | Splisus |
|  6 | No   | Store   | Q1       |      15 |       1 | Store   |
|  6 | No   | Store   | Q2       |      32 |       1 | Store   |
|  6 | No   | Store   | Q3       |     298 |       1 | Store   |
|  6 | No   | Store   | Q4       |     124 |       0 | Store   |
|  6 | No   | Store   | Q5       |      85 |       1 | Store   |
|  6 | Yes  | Splisus | Q1       |      14 |       1 | Store   |
|  6 | Yes  | Splisus | Q2       |      35 |       1 | Store   |
|  6 | Yes  | Splisus | Q3       |      33 |       1 | Store   |
|  6 | Yes  | Splisus | Q4       |      34 |       0 | Store   |
|  6 | Yes  | Splisus | Q5       |      34 |       1 | Store   |
|  7 | Yes  | Splisus | Q1       |      15 |       1 | Splisus |
|  7 | Yes  | Splisus | Q2       |      25 |       1 | Splisus |
|  7 | Yes  | Splisus | Q3       |      36 |       1 | Splisus |
|  7 | Yes  | Splisus | Q4       |      92 |       0 | Splisus |
|  7 | Yes  | Splisus | Q5       |      25 |       1 | Splisus |
|  7 | No   | Store   | Q1       |      71 |       1 | Splisus |
|  7 | No   | Store   | Q2       |      36 |       1 | Splisus |
|  7 | No   | Store   | Q3       |     119 |       1 | Splisus |
|  7 | No   | Store   | Q4       |     193 |       1 | Splisus |
|  7 | No   | Store   | Q5       |      46 |       1 | Splisus |
|  8 | Yes  | Store   | Q1       |      36 |       1 | Store   |
|  8 | Yes  | Store   | Q2       |      20 |       1 | Store   |
|  8 | Yes  | Store   | Q3       |     323 |       1 | Store   |
|  8 | Yes  | Store   | Q4       |     213 |       1 | Store   |
|  8 | Yes  | Store   | Q5       |      44 |       1 | Store   |
|  8 | No   | Splisus | Q1       |     116 |       1 | Store   |
|  8 | No   | Splisus | Q2       |     142 |       1 | Store   |
|  8 | No   | Splisus | Q3       |      82 |       1 | Store   |
|  8 | No   | Splisus | Q4       |     194 |       0 | Store   |
|  8 | No   | Splisus | Q5       |      92 |       1 | Store   |
|  9 | No   | Splisus | Q1       |      51 |       1 | Splisus |
|  9 | No   | Splisus | Q2       |     112 |       1 | Splisus |
|  9 | No   | Splisus | Q3       |      58 |       1 | Splisus |
|  9 | No   | Splisus | Q4       |     153 |       0 | Splisus |
|  9 | No   | Splisus | Q5       |      66 |       1 | Splisus |
|  9 | Yes  | Store   | Q1       |      15 |       1 | Splisus |
|  9 | Yes  | Store   | Q2       |      16 |       1 | Splisus |
|  9 | Yes  | Store   | Q3       |      75 |       1 | Splisus |
|  9 | Yes  | Store   | Q4       |      68 |       1 | Splisus |
|  9 | Yes  | Store   | Q5       |      32 |       1 | Splisus |


** Analysis - Order
#+NAME: task-order
#+BEGIN_SRC R :var raw=raw-domains :results value table :exports results
library(plyr)
  ### Define geometric mean
  gmean <- function(x) {
  return(exp(mean(log(x))))
  }

    cdata <- ddply(raw, c("VP","Tool","Domain","First"), summarize,
                   TotalTime = sum(Seconds))
    cdata

#+END_SRC  

#+RESULTS: task-order
| VP | Tool | Domain  | First   | TotalTime |
|----+------+---------+---------+-----------|
|  2 | No   | Store   | Splisus |       245 |
|  2 | Yes  | Splisus | Splisus |       268 |
|  3 | No   | Store   | Store   |       464 |
|  3 | Yes  | Splisus | Store   |       223 |
|  4 | No   | Splisus | Store   |       329 |
|  4 | Yes  | Store   | Store   |       310 |
|  5 | No   | Splisus | Splisus |       315 |
|  5 | Yes  | Store   | Splisus |       343 |
|  6 | No   | Store   | Store   |       554 |
|  6 | Yes  | Splisus | Store   |       150 |
|  7 | No   | Store   | Splisus |       465 |
|  7 | Yes  | Splisus | Splisus |       193 |
|  8 | No   | Splisus | Store   |       626 |
|  8 | Yes  | Store   | Store   |       636 |
|  9 | No   | Splisus | Splisus |       440 |
|  9 | Yes  | Store   | Splisus |       206 | 


#+BEGIN_SRC R :var time=task-order :results value table :exports results
library(plyr)
  ### Define geometric mean
  gmean <- function(x) {
  return(exp(mean(log(x))))
  }

    cdata <- ddply(time, c("Tool","Domain","First"), summarize,
                   TotalTime = round(exp(mean(log(TotalTime))),0))
    cdata

#+END_SRC  

#+RESULTS:
| Tool | Domain  | First   | TotalTime |
|------+---------+---------+-----------|
| No   | Splisus | Splisus |       372 |
| No   | Splisus | Store   |       454 |
| No   | Store   | Splisus |       338 |
| No   | Store   | Store   |       507 |
| Yes  | Splisus | Splisus |       227 |
| Yes  | Splisus | Store   |       183 |
| Yes  | Store   | Splisus |       266 |
| Yes  | Store   | Store   |       444 |

#+NAME: task-order-aggregated
#+BEGIN_SRC R :var raw=raw-domains :results value table :exports results
library(plyr)
  ### Define geometric mean
  gmean <- function(x) {
  return(exp(mean(log(x))))
  }

    cdata <- ddply(raw, c("First","Tool","Domain"), prod,
                   GeometricMean = round(exp(mean(log(Seconds))),0))
    cdata
#+END_SRC  

#+RESULTS: task-order-aggregated
| First   | Tool | Domain  | GeometricMean |
|---------+------+---------+---------------|
| Splisus | No   | Splisus |            62 |
| Splisus | No   | Store   |            54 |
| Splisus | Yes  | Splisus |            34 |
| Splisus | Yes  | Store   |            42 |
| Store   | No   | Splisus |            82 |
| Store   | No   | Store   |            75 |
| Store   | Yes  | Splisus |            28 |
| Store   | Yes  | Store   |            57 |


** Plot - All
#+BEGIN_SRC R :var raw=raw-domains :results output graphics :file meeee.png :exports none
    library(plyr)
    cdata <- ddply(raw, c("Domain","Tool","Question"), summarise,
                   Time = mean(Time),
                   CompletionRate = mean(Correct))
    cdata
  
  library(ggplot2)
  ggplot(cdata, aes(x=Domain, y=Time,fill=Tool)) + 
         geom_bar(position=position_dodge(), stat="identity") +
         scale_y_continuous(breaks=0:200*5) +
         theme_bw()
#+END_SRC  

#+RESULTS:
[[file:meeee.png]]



#+NAME: task-total
#+BEGIN_SRC R :var raw=raw-domains :results value table :exports results
library(plyr)
  ### Define geometric mean
  gmean <- function(x) {
  return(exp(mean(log(x))))
  }

    cdata <- ddply(raw, c("Domain","Tool","Question"), summarise,
                   Seconds = round(exp(mean(log(Seconds))),0),
                   CompletionRate = mean(Correct))
    cdata
#+END_SRC  

#+RESULTS: task-total
| Domain  | Tool | Question | Seconds | CompletionRate |
|---------+------+----------+---------+----------------|
| Splisus | No   | Q1       |      57 |              1 |
| Splisus | No   | Q2       |      81 |              1 |
| Splisus | No   | Q3       |      47 |              1 |
| Splisus | No   | Q4       |      97 |            0.5 |
| Splisus | No   | Q5       |      88 |              1 |
| Splisus | Yes  | Q1       |      20 |              1 |
| Splisus | Yes  | Q2       |      26 |              1 |
| Splisus | Yes  | Q3       |      23 |              1 |
| Splisus | Yes  | Q4       |      89 |              0 |
| Splisus | Yes  | Q5       |      27 |              1 |
| Store   | No   | Q1       |      28 |              1 |
| Store   | No   | Q2       |      32 |              1 |
| Store   | No   | Q3       |     142 |           0.75 |
| Store   | No   | Q4       |     118 |           0.75 |
| Store   | No   | Q5       |      69 |              1 |
| Store   | Yes  | Q1       |      24 |              1 |
| Store   | Yes  | Q2       |      22 |              1 |
| Store   | Yes  | Q3       |      86 |           0.75 |
| Store   | Yes  | Q4       |     101 |              1 |
| Store   | Yes  | Q5       |      64 |              1 |



#+BEGIN_SRC R :var raw=raw-domains :results value
## Summarizes data.
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
gmean <- function(x) {
  return(exp(mean(log(x))))
}

geosd <- function(x, na.rm = FALSE, ...)
{
exp(sd(log(x, ...), na.rm = na.rm, ...))
}

summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
    require(plyr)

    # New version of length which can handle NA's: if na.rm==T, don't count them
    length2 <- function (x, na.rm=FALSE) {
        if (na.rm) sum(!is.na(x))
        else       length(x)
    }

    # This does the summary. For each group's data frame, return a vector with
    # N, mean, and sd
    datac <- ddply(data, groupvars, .drop=.drop,
      .fun = function(xx, col) {
        c(N    = length2(xx[[col]], na.rm=na.rm),
          mean = round(gmean   (xx[[col]]),0),
          SD   = round(sd     (xx[[col]]),0)
        )
      },
      measurevar
    )

    # Rename the "mean" column    
    datac <- rename(datac, c("mean" = measurevar))

    datac$SE <- round(datac$SD / sqrt(datac$N),0)  # Calculate standard error of the mean

    # Confidence interval multiplier for standard error
    # Calculate t-statistic for confidence interval: 
    # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
    ciMult <- qt(conf.interval/2 + .5, datac$N-1)
    datac$CI <- round(datac$SE * ciMult,0)

    return(datac)
}

summarySE(raw, measurevar="Seconds", groupvars=c("Tool"))

#+END_SRC

#+RESULTS:
| Tool |  N | Seconds | SD | SE | CI |
|------+----+---------+----+----+----|
| No   | 40 |      67 | 60 |  9 | 18 |
| Yes  | 40 |      39 | 64 | 10 | 20 |












* Task Completions
** Aggregated

#+NAME: task-completions-agg
#+BEGIN_SRC R :var raw=raw-domains :results value :exports none
    library(plyr)
    eRaw <-  subset(raw, Correct == 1)
    eCdata <- ddply(eRaw, c("Tool","Question"), summarise,
                    Seconds = round(exp(mean(log(Seconds))),0),
                    N = length(Domain))
#+END_SRC  

#+RESULTS: task-completions-agg
| Tool | Question | Seconds | N |
|------+----------+---------+---|
| No   | Q1       |      40 | 8 |
| No   | Q2       |      51 | 8 |
| No   | Q3       |      74 | 7 |
| No   | Q4       |      86 | 5 |
| No   | Q5       |      78 | 8 |
| Yes  | Q1       |      22 | 8 |
| Yes  | Q2       |      24 | 8 |
| Yes  | Q3       |      46 | 7 |
| Yes  | Q4       |     101 | 4 |
| Yes  | Q5       |      41 | 8 |



#+NAME: agg-points
#+BEGIN_SRC R :var raw=raw-domains :exports none
    library(plyr)
    eRaw <-  subset(raw, Correct == 1)
    eCdata <- ddply(eRaw, c("Seconds","Tool","Question"), summarise,
                    Seconds = Seconds)
#+END_SRC

#+RESULTS: agg-points
| Tool | Question | Seconds |
|------+----------+---------|
| Yes  | Q3       |       7 |
| No   | Q1       |      10 |
| Yes  | Q5       |      11 |
| Yes  | Q1       |      14 |
| No   | Q1       |      15 |
| Yes  | Q1       |      15 |
| Yes  | Q1       |      15 |
| Yes  | Q2       |      15 |
| Yes  | Q2       |      16 |
| Yes  | Q2       |      18 |
| Yes  | Q1       |      19 |
| Yes  | Q1       |      19 |
| Yes  | Q2       |      20 |
| No   | Q2       |      22 |
| No   | Q2       |      24 |
| Yes  | Q2       |      25 |
| Yes  | Q5       |      25 |
| No   | Q3       |      28 |
| Yes  | Q2       |      30 |
| No   | Q2       |      32 |
| Yes  | Q5       |      32 |
| Yes  | Q1       |      33 |
| Yes  | Q3       |      33 |
| Yes  | Q3       |      33 |
| No   | Q4       |      34 |
| Yes  | Q5       |      34 |
| No   | Q1       |      35 |
| Yes  | Q2       |      35 |
| No   | Q2       |      36 |
| No   | Q3       |      36 |
| Yes  | Q1       |      36 |
| Yes  | Q3       |      36 |
| No   | Q2       |      37 |
| Yes  | Q1       |      38 |
| Yes  | Q5       |      44 |
| No   | Q5       |      46 |
| Yes  | Q2       |      46 |
| Yes  | Q4       |      48 |
| No   | Q1       |      50 |
| No   | Q1       |      51 |
| Yes  | Q5       |      53 |
| No   | Q5       |      56 |
| No   | Q3       |      58 |
| No   | Q1       |      60 |
| Yes  | Q3       |      61 |
| No   | Q4       |      64 |
| No   | Q5       |      66 |
| Yes  | Q5       |      67 |
| Yes  | Q4       |      68 |
| No   | Q3       |      70 |
| No   | Q1       |      71 |
| Yes  | Q3       |      75 |
| No   | Q5       |      77 |
| No   | Q5       |      77 |
| No   | Q3       |      82 |
| No   | Q5       |      85 |
| No   | Q4       |      86 |
| No   | Q5       |      92 |
| No   | Q2       |     112 |
| No   | Q1       |     116 |
| No   | Q3       |     119 |
| No   | Q2       |     124 |
| No   | Q4       |     127 |
| No   | Q2       |     142 |
| Yes  | Q4       |     148 |
| No   | Q5       |     173 |
| Yes  | Q5       |     179 |
| No   | Q4       |     193 |
| Yes  | Q4       |     213 |
| No   | Q3       |     298 |
| Yes  | Q3       |     323 |

  


#+NAME: task-completion-rate
#+BEGIN_SRC R :var raw=raw-domains :exports none
 library(plyr)
    con <- ddply(raw, c("Tool","Question"), summarise,
                    CR = mean(Correct))
#+END_SRC

#+RESULTS: task-completion-rate
| Tool | Question |    CR |
|------+----------+-------|
| No   | Q1       |     1 |
| No   | Q2       |     1 |
| No   | Q3       | 0.875 |
| No   | Q4       | 0.625 |
| No   | Q5       |     1 |
| Yes  | Q1       |     1 |
| Yes  | Q2       |     1 |
| Yes  | Q3       | 0.875 |
| Yes  | Q4       |   0.5 |
| Yes  | Q5       |     1 |



# Very, very good
#+NAME: task-completions-plot
#+BEGIN_SRC R :var tc=task-completions-agg points=agg-points rate=task-completion-rate :results output graphics :file task-completions-agg.svg :exports graphics
  library(ggplot2)
    
    ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
    geom_bar(position=position_dodge(), stat="identity") +
    geom_point(data = points, aes(x=Question, y = Seconds, fill=Tool), size = 1, colour = 'black',
               stat = "identity",position=position_dodge(width=0.9)) + 
  
    scale_y_continuous(breaks=0:200*10) +
      scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  # Legend label, use darker colors
      ggtitle("Average Task Completion Time (Geometric Mean)\nfor Aggregated Domains per Question (with Data Values)") +
      guides(fill = guide_legend(override.aes = list(text = 1))) +
      theme_bw() +  
         geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 3), size = 3,
      position = position_dodge(width=0.9))

#+END_SRC

#+RESULTS: task-completions-plot
[[file:myshine.pdf]]

# A test for saving the text separately
#+NAME: task-completions-plot
#+BEGIN_SRC R :var tc=task-completions-agg points=agg-points rate=task-completion-rate  :results output graphics :file myshine.pdf
  library(ggplot2)  
library(extrafont) 
font_import("Vemana")
loadfonts()
  library(RSvgDevice)    # Die Bibliothek RSvgDevice wird in die Umgebung eingebunden

  
#devSVG(file="myshine.pdf")             # Die Grafikausgabe wird in die Datei "Rplots.svg" umgeleitet. 
  
      ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
      geom_bar(position=position_dodge(), stat="identity") +
      geom_point(data = points, aes(x=Question, y = Seconds, fill=Tool), size = 1, colour = 'black',
                 stat = "identity",position=position_dodge(width=0.9)) + 
    
      scale_y_continuous(breaks=0:200*10) +
        scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  # Legend label, use darker colors
        ggtitle("Average Task Completion Time (Geometric Mean)\nfor Aggregated Domains per Question (with Data Values)") +
        guides(fill = guide_legend(override.aes = list(text = 1))) +
        theme_bw() +  
theme(text=element_text(family="Vemana", size=14)) +
           geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 3), size = 3,
        position = position_dodge(width=0.9))
ggsave("mycoolshine.pdf") 
#dev.off()
  
#+END_SRC


# A test for editing the font family
#+NAME: task-completions-plot
#+BEGIN_SRC R :var tc=task-completions-agg points=agg-points rate=task-completion-rate
  library(ggplot2) 
#  library(extrafont)  
#font_import("Trebuchet MS")
  library(RSvgDevice)    # Die Bibliothek RSvgDevice wird in die Umgebung eingebunden
  
devSVG()             # Die Grafikausgabe wird in die Datei "Rplots.svg" umgeleitet. 
  
      ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
      geom_bar(position=position_dodge(), stat="identity") +
      geom_point(data = points, aes(x=Question, y = Seconds, fill=Tool), size = 1, colour = 'black',
                 stat = "identity",position=position_dodge(width=0.9)) + 
    
      scale_y_continuous(breaks=0:200*10) +
        scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  # Legend label, use darker colors
        ggtitle("Average Task Completion Time (Geometric Mean)\nfor Aggregated Domains per Question (with Data Values)") +
        guides(fill = guide_legend(override.aes = list(text = 1))) +
        theme_bw() +  
# theme(text=element_text(family="Trebuchet MS")) +
           geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 3), size = 3,
        position = position_dodge(width=0.9))
#ggsave("allelections.svg", height = 5, width = 6) 
  
#+END_SRC

# Same Plot, but without points
#+CAPTION: Aggregated Domains, without points
#+NAME: task-completions-plot-no-points
#+BEGIN_SRC R :var tc=task-completions-agg points=agg-points rate=task-completion-rate :results output graphics :file task-completions-agg-no-points.svg :exports value
  library(ggplot2)
    
    ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
    geom_bar(position=position_dodge(), stat="identity") +
    scale_y_continuous(breaks=0:200*5) +
      scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  # Legend label, use darker colors
      ggtitle("Aggregated Task Completion Time (Geometric Mean)\nfor Aggreagted Domains per Question") +
      guides(fill = guide_legend(override.aes = list(text = 1))) +
      theme_bw() +  
         geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 3), size = 3,
      position = position_dodge(width=0.9))
#+END_SRC

#+RESULTS: task-completions-plot-no-points
[[file:task-completions-agg-no-points.svg]]


#+NAME: task-completion-rate-splisus
#+BEGIN_SRC R :var raw=raw-domains :exports none
  library(plyr)
  sRaw <-  subset(raw, Domain == "Splisus")
  ddply(sRaw, c("Tool","Question"), summarise,
           CR = mean(Correct))
  
#+END_SRC

#+RESULTS: task-completion-rate-splisus
| Tool | Question |  CR |
|------+----------+-----|
| No   | Q1       |   1 |
| No   | Q2       |   1 |
| No   | Q3       |   1 |
| No   | Q4       | 0.5 |
| No   | Q5       |   1 |
| Yes  | Q1       |   1 |
| Yes  | Q2       |   1 |
| Yes  | Q3       |   1 |
| Yes  | Q4       |   0 |
| Yes  | Q5       |   1 |


#+NAME: task-completions
#+BEGIN_SRC R :var raw=raw-domains :results value :exports none
    library(plyr)
    eRaw <-  subset(raw, Correct == 1)
    eCdata <- ddply(eRaw, c("Domain","Tool","Question"), summarise,
                    Seconds = round(exp(mean(log(Seconds))),0),
                    N = length(Domain))
    question4 <- data.frame(Domain="Splisus", Tool="Yes", Question="Q4", Seconds=0,N=0)
    total <- rbind(eCdata, question4)
    total
#+END_SRC  

#+RESULTS: task-completions
| Domain  | Tool | Question | Seconds | N |
|---------+------+----------+---------+---|
| Splisus | No   | Q1       |      57 | 4 |
| Splisus | No   | Q2       |      81 | 4 |
| Splisus | No   | Q3       |      47 | 4 |
| Splisus | No   | Q4       |      54 | 2 |
| Splisus | No   | Q5       |      88 | 4 |
| Splisus | Yes  | Q1       |      20 | 4 |
| Splisus | Yes  | Q2       |      26 | 4 |
| Splisus | Yes  | Q3       |      23 | 4 |
| Splisus | Yes  | Q5       |      27 | 4 |
| Store   | No   | Q1       |      28 | 4 |
| Store   | No   | Q2       |      32 | 4 |
| Store   | No   | Q3       |     135 | 3 |
| Store   | No   | Q4       |     116 | 3 |
| Store   | No   | Q5       |      69 | 4 |
| Store   | Yes  | Q1       |      24 | 4 |
| Store   | Yes  | Q2       |      22 | 4 |
| Store   | Yes  | Q3       |     114 | 3 |
| Store   | Yes  | Q4       |     101 | 4 |
| Store   | Yes  | Q5       |      64 | 4 |
| Splisus | Yes  | Q4       |       0 | 0 |



** Splisus

#+NAME: task-completions-splisus
#+BEGIN_SRC R :var tc=task-completions :exports none
tcs <-  subset(tc, Domain == "Splisus")
#+END_SRC

#+RESULTS: task-completions-splisus
| Domain  | Tool | Question | Seconds | N |
|---------+------+----------+---------+---|
| Splisus | No   | Q1       |      57 | 4 |
| Splisus | No   | Q2       |      81 | 4 |
| Splisus | No   | Q3       |      47 | 4 |
| Splisus | No   | Q4       |      54 | 2 |
| Splisus | No   | Q5       |      88 | 4 |
| Splisus | Yes  | Q1       |      20 | 4 |
| Splisus | Yes  | Q2       |      26 | 4 |
| Splisus | Yes  | Q3       |      23 | 4 |
| Splisus | Yes  | Q5       |      27 | 4 |
| Splisus | Yes  | Q4       |       0 | 0 |

#+NAME: splisus-points
#+BEGIN_SRC R :var raw=raw-domains :exports none
    library(plyr)
    eRawT <-  subset(raw, Correct == 1)
    eRaw <-  subset(eRawT, Domain == "Splisus")
    eCdata <- ddply(eRaw, c("Seconds","Tool","Question"), summarise,
                    Seconds = Seconds)
    question4 <- data.frame(Tool="Yes", Question="Q4", Seconds=0)
    total <- rbind(eCdata, question4)
    total
#+END_SRC

#+RESULTS: splisus-points
| Tool | Question | Seconds |
|------+----------+---------|
| Yes  | Q3       |       7 |
| Yes  | Q5       |      11 |
| Yes  | Q1       |      14 |
| Yes  | Q1       |      15 |
| Yes  | Q2       |      18 |
| Yes  | Q1       |      19 |
| No   | Q2       |      22 |
| Yes  | Q2       |      25 |
| Yes  | Q5       |      25 |
| No   | Q3       |      28 |
| Yes  | Q2       |      30 |
| Yes  | Q3       |      33 |
| Yes  | Q3       |      33 |
| No   | Q4       |      34 |
| Yes  | Q5       |      34 |
| No   | Q1       |      35 |
| Yes  | Q2       |      35 |
| No   | Q3       |      36 |
| Yes  | Q3       |      36 |
| Yes  | Q1       |      38 |
| No   | Q1       |      50 |
| No   | Q1       |      51 |
| Yes  | Q5       |      53 |
| No   | Q5       |      56 |
| No   | Q3       |      58 |
| No   | Q5       |      66 |
| No   | Q3       |      82 |
| No   | Q4       |      86 |
| No   | Q5       |      92 |
| No   | Q2       |     112 |
| No   | Q1       |     116 |
| No   | Q2       |     124 |
| No   | Q2       |     142 |
| No   | Q5       |     173 |
| Yes  | Q4       |       0 |



#+NAME: task-completion-rate-store
#+BEGIN_SRC R :var raw=raw-domains :exports none
  library(plyr)
  sRaw <-  subset(raw, Domain == "Store")
  ddply(sRaw, c("Tool","Question"), summarise,
           CR = mean(Correct))
  
#+END_SRC

#+RESULTS: task-completion-rate-store
| Tool | Question |   CR |
|------+----------+------|
| No   | Q1       |    1 |
| No   | Q2       |    1 |
| No   | Q3       | 0.75 |
| No   | Q4       | 0.75 |
| No   | Q5       |    1 |
| Yes  | Q1       |    1 |
| Yes  | Q2       |    1 |
| Yes  | Q3       | 0.75 |
| Yes  | Q4       |    1 |
| Yes  | Q5       |    1 |

** Plots

# Very, very good
#+NAME: task-completions-splisus-plot
#+BEGIN_SRC R :var tc=task-completions-splisus points=splisus-points rate=task-completion-rate-splisus :results output graphics :file task-completions-splisus.svg :exports value
  library(ggplot2)
    
    ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
    geom_bar(position=position_dodge(), stat="identity") +
    geom_point(data = points, aes(x=Question, y = Seconds, fill=Tool), size = 1, colour = 'black',
               stat = "identity",position=position_dodge(width=0.9)) + 
  
    scale_y_continuous(breaks=0:200*10) +
      scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  # Legend label, use darker colors
      ggtitle("Average Task Completion Time (Geometric Mean)\nfor Domain Planet Splisus' per Question (with Data Dalues)") +
      guides(fill = guide_legend(override.aes = list(text = 1))) +
      theme_bw() +  
         geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 3), size = 3,
      position = position_dodge(width=0.9))
#+END_SRC

#+RESULTS: task-completions-splisus-plot-no-points
[[file:task-completions-splisus.pdf]]

# Very, very good
#+NAME: task-completions-splisus-plot
#+BEGIN_SRC R :var tc=task-completions-splisus points=splisus-points rate=task-completion-rate-splisus :results output graphics :file task-completions-splisus-no-points.svg :exports value
  library(ggplot2)
    
    ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
    geom_bar(position=position_dodge(), stat="identity") +
    scale_y_continuous(breaks=0:200*5) +
      scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  # Legend label, use darker colors
      ggtitle("Average Task Completion Time (Geometric Mean)\nfor Domain Planet Splisus' per Question") +
      guides(fill = guide_legend(override.aes = list(text = 1))) +
      theme_bw() +  
         geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 3), size = 3,
      position = position_dodge(width=0.9))
#+END_SRC

#+RESULTS: task-completions-splisus-plot
[[file:task-completions-splisus.svg]]


** Store

#+NAME: task-completions-store
#+BEGIN_SRC R :var tc=task-completions 
tcs <-  subset(tc, Domain == "Store")
#+END_SRC

#+RESULTS: task-completions-store
| Domain | Tool | Question | Seconds | N |
|--------+------+----------+---------+---|
| Store  | No   | Q1       |      28 | 4 |
| Store  | No   | Q2       |      32 | 4 |
| Store  | No   | Q3       |     135 | 3 |
| Store  | No   | Q4       |     116 | 3 |
| Store  | No   | Q5       |      69 | 4 |
| Store  | Yes  | Q1       |      24 | 4 |
| Store  | Yes  | Q2       |      22 | 4 |
| Store  | Yes  | Q3       |     114 | 3 |
| Store  | Yes  | Q4       |     101 | 4 |
| Store  | Yes  | Q5       |      64 | 4 |

#+NAME: store-points
#+BEGIN_SRC R :var raw=raw-domains
    library(plyr)
    eRawT <-  subset(raw, Correct == 1)
    eRaw <-  subset(eRawT, Domain == "Store")
    eCdata <- ddply(eRaw, c("Seconds","Tool","Question"), summarise,
                    Seconds = Seconds)
    eCdata
#+END_SRC  

#+RESULTS: store-points
| Tool | Question | Seconds |
|------+----------+---------|
| No   | Q1       |      10 |
| No   | Q1       |      15 |
| Yes  | Q1       |      15 |
| Yes  | Q2       |      15 |
| Yes  | Q2       |      16 |
| Yes  | Q1       |      19 |
| Yes  | Q2       |      20 |
| No   | Q2       |      24 |
| No   | Q2       |      32 |
| Yes  | Q5       |      32 |
| Yes  | Q1       |      33 |
| No   | Q2       |      36 |
| Yes  | Q1       |      36 |
| No   | Q2       |      37 |
| Yes  | Q5       |      44 |
| No   | Q5       |      46 |
| Yes  | Q2       |      46 |
| Yes  | Q4       |      48 |
| No   | Q1       |      60 |
| Yes  | Q3       |      61 |
| No   | Q4       |      64 |
| Yes  | Q5       |      67 |
| Yes  | Q4       |      68 |
| No   | Q3       |      70 |
| No   | Q1       |      71 |
| Yes  | Q3       |      75 |
| No   | Q5       |      77 |
| No   | Q5       |      77 |
| No   | Q5       |      85 |
| No   | Q3       |     119 |
| No   | Q4       |     127 |
| Yes  | Q4       |     148 |
| Yes  | Q5       |     179 |
| No   | Q4       |     193 |
| Yes  | Q4       |     213 |
| No   | Q3       |     298 |
| Yes  | Q3       |     323 | 


** Plots

# Very, very good
#+NAME: task-completions-store-plot
#+BEGIN_SRC R :var tc=task-completions-store points=store-points rate=task-completion-rate-store :results output graphics :file task-completions-store.svg :exports value
library(ggplot2)
  
  ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
  geom_bar(position=position_dodge(), stat="identity") +
  geom_point(data = points, aes(x=Question, y = Seconds, fill=Tool), size = 1, colour = 'black',
             stat = "identity",position=position_dodge(width=0.9)) + 
  scale_y_continuous(breaks=0:200*10) +
    scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  
    ggtitle("Average Task Completion Time (Geometric Mean)\nfor Domain 'Store' per Question (with Data Values)") +
    theme_bw() + 
    geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 4), size = 3,
    position = position_dodge(width=0.9))
#+END_SRC  

#+RESULTS: task-completions-store-plot
[[file:task-completions-store.svg]]

# Very, very good
#+NAME: task-completions-store-plot-no-points
#+BEGIN_SRC R :var tc=task-completions-store points=store-points rate=task-completion-rate-store :results output graphics :file task-completions-store-no-points.svg :exports value
library(ggplot2)
  
  ggplot(tc, aes(x=Question, y=Seconds,fill=Tool)) +
  geom_bar(position=position_dodge(), stat="identity") +
  scale_y_continuous(breaks=0:200*5) +
    scale_fill_hue(name="With diagram\n(myPDDL-dia)") +  
    ggtitle("Average Task Completion Time (Geometric Mean)\nfor Domain 'Store' per Question") +
    theme_bw() + 
    geom_text(data=rate,aes(label = paste(CR * 100, "%", sep = ""), x = Question, y = 4), size = 3,
    position = position_dodge(width=0.9))
#+END_SRC  

#+RESULTS: task-completions-store-plot-no-points
[[file:task-completions-store-no-points.svg]]

* Task Failures
** Aggregated
#+NAME: task-failures
#+BEGIN_SRC R :var raw=raw-domains :results value :exports none
    eRaw <-  subset(raw, Correct == 0)
    library(plyr)
    eCdata <- ddply(eRaw, c("Domain","Tool","Question"), summarise,
                    Time = mean(Time),
                    N = length(Domain))
    eCdata
#+END_SRC  

#+RESULTS: task-failures
| Domain  | Tool | Question |  Time | N |
|---------+------+----------+-------+---|
| Splisus | No   |        4 | 173.5 | 2 |
| Splisus | Yes  |        4 |   102 | 4 |
| Store   | No   |        3 |   163 | 1 |
| Store   | No   |        4 |   124 | 1 |
| Store   | Yes  |        3 |    37 | 1 |

** Splisus
#+NAME: task-failures-splisus
#+BEGIN_SRC R :var tf=task-failures  :exports none
tfs <-  subset(tf, Domain == "Splisus")
#+END_SRC

#+RESULTS: task-failures-splisus
| Domain  | Tool | Question |  Time | N |
|---------+------+----------+-------+---|
| Splisus | No   |        4 | 173.5 | 2 |
| Splisus | Yes  |        4 |   102 | 4 |



** Store

#+NAME: task-failures-store
#+BEGIN_SRC R :var tf=task-failures :results value :exports none
tfs <-  subset(tf, Domain == "Store")
tfs[3] <- lapply(tfs[3], as.character)
tfs
#+END_SRC

#+RESULTS: task-failures-store
| Domain | Tool | Question | Time | N |
|--------+------+----------+------+---|
| Store  | No   | Q3       |  163 | 1 |
| Store  | No   | Q4       |  124 | 1 |
| Store  | Yes  | Q3       |   37 | 1 |

#+NAME: time-to-failure-store-plot
#+BEGIN_SRC R :var tf=task-failures-store :results output graphics :file task-failures-store.png :exports value
  library(ggplot2)
  ggplot(tf, aes(x=Question, y=Time,fill=Tool)) + 
      geom_bar(position=position_dodge(), stat="identity") +
           scale_x_discrete(limits=c("Q1","Q2","Q3","Q4","Q5")) + 
      scale_y_continuous(breaks=0:200*5) +
      theme_bw()
#+END_SRC

#+RESULTS: time-to-failure-store-plot
[[file:task-failures-store.png]]


#+NAME: time-to-failure-plot
#+BEGIN_SRC R :var mt=task-failures :results output graphics :file task-failures.png :exports none
  library(ggplot2)
  ggplot(mt, aes(x=Domain, y=Time,fill=Tool)) + 
      geom_bar(position=position_dodge(), stat="identity") +
      scale_y_continuous(breaks=0:200*5) +
      theme_bw()
#+END_SRC

#+RESULTS: time-to-failure-plot
[[file:task-failures.png]]
